void cb_src_hh_min_modify_saturation_belt_(
	E_COLOR_TRACE_HAB_COLORS num
)
{
	double h_min = 0.0;
	double h_max = 0.0;
	switch (num) {
	case E_COLOR_TRACE_HAB_01:
	h_min = cl_gts_gui.valinp_color_trace_01_src_hh_min->value();
	h_max = cl_gts_gui.valinp_color_trace_01_src_hh_max->value();
		break;
	case E_COLOR_TRACE_HAB_02:
	h_min = cl_gts_gui.valinp_color_trace_02_src_hh_min->value();
	h_max = cl_gts_gui.valinp_color_trace_02_src_hh_max->value();
		break;
	case E_COLOR_TRACE_HAB_03:
	h_min = cl_gts_gui.valinp_color_trace_03_src_hh_min->value();
	h_max = cl_gts_gui.valinp_color_trace_03_src_hh_max->value();
		break;
	case E_COLOR_TRACE_HAB_04:
	h_min = cl_gts_gui.valinp_color_trace_04_src_hh_min->value();
	h_max = cl_gts_gui.valinp_color_trace_04_src_hh_max->value();
		break;
	case E_COLOR_TRACE_HAB_05:
	h_min = cl_gts_gui.valinp_color_trace_05_src_hh_min->value();
	h_max = cl_gts_gui.valinp_color_trace_05_src_hh_max->value();
		break;
	case E_COLOR_TRACE_HAB_06:
	h_min = cl_gts_gui.valinp_color_trace_06_src_hh_min->value();
	h_max = cl_gts_gui.valinp_color_trace_06_src_hh_max->value();
 		break;
	}

	const unsigned char *const* image_p =
		reinterpret_cast<const unsigned char *const*>(
			cl_gts_gui.box_hh_color_belt->image()->data()
		);
	int depth = cl_gts_gui.box_hh_color_belt->image()->d();
	int width = cl_gts_gui.box_hh_color_belt->image()->w();

	/* 0〜1の範囲をヒストグラム配列の範囲に変更 */
	double h_middle = 0.0;
	if (h_min <= h_max) {
		h_middle =  (h_min + h_max) / 2.0;
	}
	else {
		h_middle =  std::fmod(
			((h_min + h_max + 360.0) / 2.0) , 360.0
		);
	}
	const int i_pos = static_cast<int>(
		(width + 0.999999) * h_middle / 360.0
	);

	unsigned char rr = image_p[0][i_pos*depth+0];
	unsigned char gg = image_p[0][i_pos*depth+1];
	unsigned char bb = image_p[0][i_pos*depth+2];

std::cout << __FILE__ << __LINE__
<< " min=" << h_min
<< " max=" << h_max
<< " middle=" << (h_min + h_max) / 2.0 / 360.0
<< " rr=" << (int)rr
<< " gg=" << (int)gg
<< " bb=" << (int)bb
<< std::endl;

	cl_gts_gui.fltkp_aa_color_belt->set_right_color(rr,gg,bb);
	//cl_gts_gui.window_hab_histogram->redraw();
	cl_gts_gui.fltkp_aa_color_belt->redraw();
	cl_gts_gui.fltkp_aa_histogram->redraw();
}
