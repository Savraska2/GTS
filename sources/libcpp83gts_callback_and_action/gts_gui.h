// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef gts_gui_h
#define gts_gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include "fltk_opengl.h"
#include <FL/Fl_Scrollbar.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_File_Input.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Scroll.H>
#include "fltk_1000x100_histogram.h"
#include "fltk_1000_range_cyclic.h"
#include <FL/Fl_Light_Button.H>
#include "fltk_1000x10_color_belt.h"
#include "fltk_1000_range_minmax.h"

class gts_gui {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *window_opengl;
private:
  inline void cb_window_opengl_i(Fl_Double_Window*, void*);
  static void cb_window_opengl(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_[];
  inline void cb_Open_i(Fl_Menu_*, void*);
  static void cb_Open(Fl_Menu_*, void*);
  inline void cb_Set_i(Fl_Menu_*, void*);
  static void cb_Set(Fl_Menu_*, void*);
  inline void cb_Open1_i(Fl_Menu_*, void*);
  static void cb_Open1(Fl_Menu_*, void*);
  inline void cb_Save_i(Fl_Menu_*, void*);
  static void cb_Save(Fl_Menu_*, void*);
  inline void cb_Save1_i(Fl_Menu_*, void*);
  static void cb_Save1(Fl_Menu_*, void*);
  inline void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
  inline void cb_Crop_i(Fl_Menu_*, void*);
  static void cb_Crop(Fl_Menu_*, void*);
  inline void cb_Preview_i(Fl_Menu_*, void*);
  static void cb_Preview(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_start_scan;
private:
  inline void cb_menite_start_scan_i(Fl_Menu_*, void*);
  static void cb_menite_start_scan(Fl_Menu_*, void*);
  inline void cb_Trace_i(Fl_Menu_*, void*);
  static void cb_Trace(Fl_Menu_*, void*);
  inline void cb_Rename_i(Fl_Menu_*, void*);
  static void cb_Rename(Fl_Menu_*, void*);
  inline void cb_Renumber_i(Fl_Menu_*, void*);
  static void cb_Renumber(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_scan_and_save;
private:
  inline void cb_menite_scan_and_save_i(Fl_Menu_*, void*);
  static void cb_menite_scan_and_save(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_crop_area_and_rot90;
private:
  inline void cb_menite_crop_area_and_rot90_i(Fl_Menu_*, void*);
  static void cb_menite_crop_area_and_rot90(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_pixel_type_and_bright;
private:
  inline void cb_menite_pixel_type_and_bright_i(Fl_Menu_*, void*);
  static void cb_menite_pixel_type_and_bright(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_number;
private:
  inline void cb_menite_number_i(Fl_Menu_*, void*);
  static void cb_menite_number(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_thickness;
private:
  inline void cb_menite_trace_thickness_i(Fl_Menu_*, void*);
  static void cb_menite_trace_thickness(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_input_color;
private:
  inline void cb_menite_trace_input_color_i(Fl_Menu_*, void*);
  static void cb_menite_trace_input_color(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_output_color;
private:
  inline void cb_menite_trace_output_color_i(Fl_Menu_*, void*);
  static void cb_menite_trace_output_color(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_parameters;
private:
  inline void cb_menite_trace_parameters_i(Fl_Menu_*, void*);
  static void cb_menite_trace_parameters(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_files;
private:
  inline void cb_menite_trace_files_i(Fl_Menu_*, void*);
  static void cb_menite_trace_files(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_batch;
private:
  inline void cb_menite_trace_batch_i(Fl_Menu_*, void*);
  static void cb_menite_trace_batch(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_sane_device;
private:
  inline void cb_zoom_i(Fl_Menu_*, void*);
  static void cb_zoom(Fl_Menu_*, void*);
  inline void cb_zoom1_i(Fl_Menu_*, void*);
  static void cb_zoom1(Fl_Menu_*, void*);
  inline void cb_x1_i(Fl_Menu_*, void*);
  static void cb_x1(Fl_Menu_*, void*);
  inline void cb_All_i(Fl_Menu_*, void*);
  static void cb_All(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_frame_cyclic;
private:
  inline void cb_Prev_i(Fl_Menu_*, void*);
  static void cb_Prev(Fl_Menu_*, void*);
  inline void cb_Next_i(Fl_Menu_*, void*);
  static void cb_Next(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_wview_main;
private:
  inline void cb_menite_wview_main_i(Fl_Menu_*, void*);
  static void cb_menite_wview_main(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_wview_sub;
private:
  inline void cb_menite_wview_sub_i(Fl_Menu_*, void*);
  static void cb_menite_wview_sub(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_wview_lr;
private:
  inline void cb_menite_wview_lr_i(Fl_Menu_*, void*);
  static void cb_menite_wview_lr(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_wview_ud;
private:
  inline void cb_menite_wview_ud_i(Fl_Menu_*, void*);
  static void cb_menite_wview_ud(Fl_Menu_*, void*);
  inline void cb_FullColor_i(Fl_Menu_*, void*);
  static void cb_FullColor(Fl_Menu_*, void*);
  inline void cb_Red_i(Fl_Menu_*, void*);
  static void cb_Red(Fl_Menu_*, void*);
  inline void cb_Green_i(Fl_Menu_*, void*);
  static void cb_Green(Fl_Menu_*, void*);
  inline void cb_Blue_i(Fl_Menu_*, void*);
  static void cb_Blue(Fl_Menu_*, void*);
  inline void cb_Red1_i(Fl_Menu_*, void*);
  static void cb_Red1(Fl_Menu_*, void*);
  inline void cb_Green1_i(Fl_Menu_*, void*);
  static void cb_Green1(Fl_Menu_*, void*);
  inline void cb_Blue1_i(Fl_Menu_*, void*);
  static void cb_Blue1(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_help_about;
private:
  inline void cb_menite_help_about_i(Fl_Menu_*, void*);
  static void cb_menite_help_about(Fl_Menu_*, void*);
public:
  fltk_opengl *opengl_view;
  Fl_Scrollbar *scrbar_view_x;
private:
  inline void cb_scrbar_view_x_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_view_x(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_view_y;
private:
  inline void cb_scrbar_view_y_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_view_y(Fl_Scrollbar*, void*);
public:
  Fl_Double_Window *window_next_scan;
  Fl_Button *button_rescan;
private:
  inline void cb_button_rescan_i(Fl_Button*, void*);
  static void cb_button_rescan(Fl_Button*, void*);
public:
  Fl_Button *button_next_scan;
private:
  inline void cb_button_next_scan_i(Fl_Button*, void*);
  static void cb_button_next_scan(Fl_Button*, void*);
public:
  Fl_Button *button_stop_scan;
private:
  inline void cb_button_stop_scan_i(Fl_Button*, void*);
  static void cb_button_stop_scan(Fl_Button*, void*);
public:
  Fl_Output *norout_crnt_scan_level;
  Fl_Output *norout_crnt_scan_number;
  Fl_Output *norout_next_scan_number;
  Fl_Double_Window *window_crop_area_and_rot90;
private:
  inline void cb_window_crop_area_and_rot90_i(Fl_Double_Window*, void*);
  static void cb_window_crop_area_and_rot90(Fl_Double_Window*, void*);
  inline void cb_Crop1_i(Fl_Button*, void*);
  static void cb_Crop1(Fl_Button*, void*);
public:
  Fl_Choice *choice_area_selecter;
private:
  inline void cb_choice_area_selecter_i(Fl_Choice*, void*);
  static void cb_choice_area_selecter(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_area_selecter[];
public:
  Fl_Group *group_area_crop;
  Fl_Value_Input *valinp_area_x_pos;
private:
  inline void cb_valinp_area_x_pos_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_x_pos(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_y_pos;
private:
  inline void cb_valinp_area_y_pos_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_y_pos(Fl_Value_Input*, void*);
public:
  Fl_Choice *choice_area_aspect_ratio_selecter;
private:
  inline void cb_choice_area_aspect_ratio_selecter_i(Fl_Choice*, void*);
  static void cb_choice_area_aspect_ratio_selecter(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_area_aspect_ratio_selecter[];
public:
  Fl_Value_Input *valinp_area_x_size;
private:
  inline void cb_valinp_area_x_size_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_x_size(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_y_size;
private:
  inline void cb_valinp_area_y_size_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_y_size(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_x_pixel;
private:
  inline void cb_valinp_area_x_pixel_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_x_pixel(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_y_pixel;
private:
  inline void cb_valinp_area_y_pixel_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_y_pixel(Fl_Value_Input*, void*);
public:
  Fl_Button *radbut_area_reso_fix_cm;
  Fl_Button *radbut_area_reso_fix_pixel;
  Fl_Value_Input *valinp_area_reso;
private:
  inline void cb_valinp_area_reso_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_reso(Fl_Value_Input*, void*);
public:
  Fl_Choice *choice_rot90;
private:
  inline void cb_choice_rot90_i(Fl_Choice*, void*);
  static void cb_choice_rot90(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_rot90[];
public:
  Fl_Output *txtout_scanner_type;
  Fl_Value_Output *valout_scanner_width_max;
  Fl_Value_Output *valout_scanner_height_max;
  Fl_Double_Window *window_pixel_type_and_bright;
private:
  inline void cb_window_pixel_type_and_bright_i(Fl_Double_Window*, void*);
  static void cb_window_pixel_type_and_bright(Fl_Double_Window*, void*);
  inline void cb_Preview1_i(Fl_Button*, void*);
  static void cb_Preview1(Fl_Button*, void*);
public:
  Fl_Choice *choice_pixel_type;
private:
  inline void cb_choice_pixel_type_i(Fl_Choice*, void*);
  static void cb_choice_pixel_type(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_pixel_type[];
public:
  Fl_Group *group_bw;
  Fl_Scrollbar *scrbar_bw_threshold;
private:
  inline void cb_scrbar_bw_threshold_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_bw_threshold(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_bw_threshold;
private:
  inline void cb_valinp_bw_threshold_i(Fl_Value_Input*, void*);
  static void cb_valinp_bw_threshold(Fl_Value_Input*, void*);
public:
  Fl_Group *group_grays;
  Fl_Scrollbar *scrbar_grayscale_brightness;
private:
  inline void cb_scrbar_grayscale_brightness_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_grayscale_brightness(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_grayscale_brightness;
private:
  inline void cb_valinp_grayscale_brightness_i(Fl_Value_Input*, void*);
  static void cb_valinp_grayscale_brightness(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_grayscale_contrast;
private:
  inline void cb_scrbar_grayscale_contrast_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_grayscale_contrast(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_grayscale_contrast;
private:
  inline void cb_valinp_grayscale_contrast_i(Fl_Value_Input*, void*);
  static void cb_valinp_grayscale_contrast(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_grayscale_gamma;
private:
  inline void cb_scrbar_grayscale_gamma_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_grayscale_gamma(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_grayscale_gamma;
private:
  inline void cb_valinp_grayscale_gamma_i(Fl_Value_Input*, void*);
  static void cb_valinp_grayscale_gamma(Fl_Value_Input*, void*);
public:
  Fl_Group *group_rgb;
  Fl_Scrollbar *scrbar_rgb_brightness;
private:
  inline void cb_scrbar_rgb_brightness_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_rgb_brightness(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_rgb_brightness;
private:
  inline void cb_valinp_rgb_brightness_i(Fl_Value_Input*, void*);
  static void cb_valinp_rgb_brightness(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_rgb_contrast;
private:
  inline void cb_scrbar_rgb_contrast_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_rgb_contrast(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_rgb_contrast;
private:
  inline void cb_valinp_rgb_contrast_i(Fl_Value_Input*, void*);
  static void cb_valinp_rgb_contrast(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_rgb_gamma;
private:
  inline void cb_scrbar_rgb_gamma_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_rgb_gamma(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_rgb_gamma;
private:
  inline void cb_valinp_rgb_gamma_i(Fl_Value_Input*, void*);
  static void cb_valinp_rgb_gamma(Fl_Value_Input*, void*);
public:
  Fl_Double_Window *window_scan_and_save;
private:
  inline void cb_window_scan_and_save_i(Fl_Double_Window*, void*);
  static void cb_window_scan_and_save(Fl_Double_Window*, void*);
  inline void cb_Scan_i(Fl_Button*, void*);
  static void cb_Scan(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_scan_filter_trace_sw;
private:
  inline void cb_chkbtn_scan_filter_trace_sw_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_scan_filter_trace_sw(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *chkbtn_scan_filter_erase_dot_noise_sw;
private:
  inline void cb_chkbtn_scan_filter_erase_dot_noise_sw_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_scan_filter_erase_dot_noise_sw(Fl_Check_Button*, void*);
public:
  Fl_File_Input *filinp_scan_save_dir_path;
private:
  inline void cb_filinp_scan_save_dir_path_i(Fl_File_Input*, void*);
  static void cb_filinp_scan_save_dir_path(Fl_File_Input*, void*);
  inline void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
public:
  Fl_Input *strinp_scan_save_file_head;
private:
  inline void cb_strinp_scan_save_file_head_i(Fl_Input*, void*);
  static void cb_strinp_scan_save_file_head(Fl_Input*, void*);
public:
  Fl_Input *strinp_scan_save_number_format;
private:
  inline void cb_strinp_scan_save_number_format_i(Fl_Input*, void*);
  static void cb_strinp_scan_save_number_format(Fl_Input*, void*);
public:
  Fl_Output *output_scan_save_number_format;
  Fl_Choice *choice_scan_save_image_format;
private:
  inline void cb_choice_scan_save_image_format_i(Fl_Choice*, void*);
  static void cb_choice_scan_save_image_format(Fl_Choice*, void*);
public:
  Fl_Value_Input *valinp_scan_num_start;
  Fl_Choice *choice_scan_num_continue_type;
private:
  inline void cb_choice_scan_num_continue_type_i(Fl_Choice*, void*);
  static void cb_choice_scan_num_continue_type(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_scan_num_continue_type[];
public:
  Fl_Choice *choice_scan_num_endless_direction;
  static Fl_Menu_Item menu_choice_scan_num_endless_direction[];
  Fl_Value_Input *valinp_scan_num_end;
private:
  inline void cb_Set1_i(Fl_Button*, void*);
  static void cb_Set1(Fl_Button*, void*);
public:
  Fl_Double_Window *window_trace_files;
private:
  inline void cb_window_trace_files_i(Fl_Double_Window*, void*);
  static void cb_window_trace_files(Fl_Double_Window*, void*);
  inline void cb_Trace1_i(Fl_Button*, void*);
  static void cb_Trace1(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_trace_open_dir_path;
private:
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
public:
  Fl_Input *strinp_trace_open_file_head;
  Fl_Input *strinp_trace_open_number_format;
  Fl_Choice *choice_trace_open_image_format;
private:
  inline void cb_Rename1_i(Fl_Button*, void*);
  static void cb_Rename1(Fl_Button*, void*);
  inline void cb_Renumber1_i(Fl_Button*, void*);
  static void cb_Renumber1(Fl_Button*, void*);
public:
  Fl_Value_Input *valinp_trace_num_start;
  Fl_Value_Input *valinp_trace_num_end;
private:
  inline void cb_Set2_i(Fl_Button*, void*);
  static void cb_Set2(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_trace_filter_trace_sw;
private:
  inline void cb_chkbtn_trace_filter_trace_sw_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_trace_filter_trace_sw(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *chkbtn_trace_filter_erase_dot_noise_sw;
private:
  inline void cb_chkbtn_trace_filter_erase_dot_noise_sw_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_trace_filter_erase_dot_noise_sw(Fl_Check_Button*, void*);
public:
  Fl_File_Input *filinp_trace_save_dir_path;
private:
  inline void cb_filinp_trace_save_dir_path_i(Fl_File_Input*, void*);
  static void cb_filinp_trace_save_dir_path(Fl_File_Input*, void*);
  inline void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
public:
  Fl_Input *strinp_trace_save_file_head;
private:
  inline void cb_strinp_trace_save_file_head_i(Fl_Input*, void*);
  static void cb_strinp_trace_save_file_head(Fl_Input*, void*);
public:
  Fl_Input *strinp_trace_save_number_format;
private:
  inline void cb_strinp_trace_save_number_format_i(Fl_Input*, void*);
  static void cb_strinp_trace_save_number_format(Fl_Input*, void*);
public:
  Fl_Output *output_trace_save_number_format;
  Fl_Choice *choice_trace_save_image_format;
private:
  inline void cb_choice_trace_save_image_format_i(Fl_Choice*, void*);
  static void cb_choice_trace_save_image_format(Fl_Choice*, void*);
public:
  Fl_Double_Window *window_number;
private:
  inline void cb_window_number_i(Fl_Double_Window*, void*);
  static void cb_window_number(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_1[];
  inline void cb_Select_i(Fl_Menu_*, void*);
  static void cb_Select(Fl_Menu_*, void*);
  inline void cb_Delete_i(Fl_Menu_*, void*);
  static void cb_Delete(Fl_Menu_*, void*);
public:
  Fl_Input *norinp_fnum_insert;
private:
  inline void cb_norinp_fnum_insert_i(Fl_Input*, void*);
  static void cb_norinp_fnum_insert(Fl_Input*, void*);
public:
  Fl_Output *output_number_type;
  Fl_Output *norout_crnt_scan_level_of_fnum;
  Fl_Browser *selbro_fnum_list;
private:
  inline void cb_selbro_fnum_list_i(Fl_Browser*, void*);
  static void cb_selbro_fnum_list(Fl_Browser*, void*);
public:
  Fl_Double_Window *window_trace_parameters;
private:
  inline void cb_window_trace_parameters_i(Fl_Double_Window*, void*);
  static void cb_window_trace_parameters(Fl_Double_Window*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_01_chk;
private:
  inline void cb_chkbtn_color_trace_01_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_01_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_01grp;
  Fl_Scrollbar *scrbar_color_trace_01_src_hh_min;
private:
  inline void cb_scrbar_color_trace_01_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_hh_max;
private:
  inline void cb_scrbar_color_trace_01_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_aa_min;
private:
  inline void cb_scrbar_color_trace_01_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_aa_max;
private:
  inline void cb_scrbar_color_trace_01_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_bb_min;
private:
  inline void cb_scrbar_color_trace_01_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_bb_max;
private:
  inline void cb_scrbar_color_trace_01_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_hh_min;
private:
  inline void cb_valinp_color_trace_01_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_hh_max;
private:
  inline void cb_valinp_color_trace_01_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_aa_min;
private:
  inline void cb_valinp_color_trace_01_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_aa_max;
private:
  inline void cb_valinp_color_trace_01_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_bb_min;
private:
  inline void cb_valinp_color_trace_01_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_bb_max;
private:
  inline void cb_valinp_color_trace_01_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_01_tgt_rgb;
private:
  inline void cb_button_color_trace_01_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_01_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_01_src;
private:
  inline void cb_button_color_trace_01_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_01_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_02_chk;
private:
  inline void cb_chkbtn_color_trace_02_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_02_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_02grp;
  Fl_Scrollbar *scrbar_color_trace_02_src_hh_min;
private:
  inline void cb_scrbar_color_trace_02_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_hh_max;
private:
  inline void cb_scrbar_color_trace_02_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_aa_min;
private:
  inline void cb_scrbar_color_trace_02_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_aa_max;
private:
  inline void cb_scrbar_color_trace_02_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_bb_min;
private:
  inline void cb_scrbar_color_trace_02_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_bb_max;
private:
  inline void cb_scrbar_color_trace_02_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_hh_min;
private:
  inline void cb_valinp_color_trace_02_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_hh_max;
private:
  inline void cb_valinp_color_trace_02_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_aa_min;
private:
  inline void cb_valinp_color_trace_02_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_aa_max;
private:
  inline void cb_valinp_color_trace_02_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_bb_min;
private:
  inline void cb_valinp_color_trace_02_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_bb_max;
private:
  inline void cb_valinp_color_trace_02_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_02_tgt_rgb;
private:
  inline void cb_button_color_trace_02_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_02_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_02_src;
private:
  inline void cb_button_color_trace_02_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_02_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_03_chk;
private:
  inline void cb_chkbtn_color_trace_03_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_03_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_03grp;
  Fl_Scrollbar *scrbar_color_trace_03_src_hh_min;
private:
  inline void cb_scrbar_color_trace_03_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_hh_max;
private:
  inline void cb_scrbar_color_trace_03_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_aa_min;
private:
  inline void cb_scrbar_color_trace_03_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_aa_max;
private:
  inline void cb_scrbar_color_trace_03_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_bb_min;
private:
  inline void cb_scrbar_color_trace_03_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_bb_max;
private:
  inline void cb_scrbar_color_trace_03_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_hh_min;
private:
  inline void cb_valinp_color_trace_03_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_hh_max;
private:
  inline void cb_valinp_color_trace_03_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_aa_min;
private:
  inline void cb_valinp_color_trace_03_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_aa_max;
private:
  inline void cb_valinp_color_trace_03_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_bb_min;
private:
  inline void cb_valinp_color_trace_03_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_bb_max;
private:
  inline void cb_valinp_color_trace_03_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_03_tgt_rgb;
private:
  inline void cb_button_color_trace_03_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_03_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_03_src;
private:
  inline void cb_button_color_trace_03_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_03_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_04_chk;
private:
  inline void cb_chkbtn_color_trace_04_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_04_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_04grp;
  Fl_Scrollbar *scrbar_color_trace_04_src_hh_min;
private:
  inline void cb_scrbar_color_trace_04_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_hh_max;
private:
  inline void cb_scrbar_color_trace_04_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_aa_min;
private:
  inline void cb_scrbar_color_trace_04_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_aa_max;
private:
  inline void cb_scrbar_color_trace_04_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_bb_min;
private:
  inline void cb_scrbar_color_trace_04_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_bb_max;
private:
  inline void cb_scrbar_color_trace_04_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_hh_min;
private:
  inline void cb_valinp_color_trace_04_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_hh_max;
private:
  inline void cb_valinp_color_trace_04_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_aa_min;
private:
  inline void cb_valinp_color_trace_04_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_aa_max;
private:
  inline void cb_valinp_color_trace_04_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_bb_min;
private:
  inline void cb_valinp_color_trace_04_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_bb_max;
private:
  inline void cb_valinp_color_trace_04_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_04_tgt_rgb;
private:
  inline void cb_button_color_trace_04_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_04_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_04_src;
private:
  inline void cb_button_color_trace_04_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_04_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_05_chk;
private:
  inline void cb_chkbtn_color_trace_05_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_05_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_05grp;
  Fl_Scrollbar *scrbar_color_trace_05_src_hh_min;
private:
  inline void cb_scrbar_color_trace_05_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_hh_max;
private:
  inline void cb_scrbar_color_trace_05_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_aa_min;
private:
  inline void cb_scrbar_color_trace_05_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_aa_max;
private:
  inline void cb_scrbar_color_trace_05_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_bb_min;
private:
  inline void cb_scrbar_color_trace_05_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_bb_max;
private:
  inline void cb_scrbar_color_trace_05_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_hh_min;
private:
  inline void cb_valinp_color_trace_05_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_hh_max;
private:
  inline void cb_valinp_color_trace_05_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_aa_min;
private:
  inline void cb_valinp_color_trace_05_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_aa_max;
private:
  inline void cb_valinp_color_trace_05_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_bb_min;
private:
  inline void cb_valinp_color_trace_05_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_bb_max;
private:
  inline void cb_valinp_color_trace_05_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_05_tgt_rgb;
private:
  inline void cb_button_color_trace_05_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_05_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_05_src;
private:
  inline void cb_button_color_trace_05_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_05_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_06_chk;
private:
  inline void cb_chkbtn_color_trace_06_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_06_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_06grp;
  Fl_Scrollbar *scrbar_color_trace_06_src_hh_min;
private:
  inline void cb_scrbar_color_trace_06_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_hh_max;
private:
  inline void cb_scrbar_color_trace_06_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_aa_min;
private:
  inline void cb_scrbar_color_trace_06_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_aa_max;
private:
  inline void cb_scrbar_color_trace_06_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_bb_min;
private:
  inline void cb_scrbar_color_trace_06_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_bb_max;
private:
  inline void cb_scrbar_color_trace_06_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_hh_min;
private:
  inline void cb_valinp_color_trace_06_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_hh_max;
private:
  inline void cb_valinp_color_trace_06_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_aa_min;
private:
  inline void cb_valinp_color_trace_06_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_aa_max;
private:
  inline void cb_valinp_color_trace_06_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_bb_min;
private:
  inline void cb_valinp_color_trace_06_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_bb_max;
private:
  inline void cb_valinp_color_trace_06_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_06_tgt_rgb;
private:
  inline void cb_button_color_trace_06_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_06_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_06_src;
private:
  inline void cb_button_color_trace_06_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_06_src(Fl_Button*, void*);
public:
  Fl_Double_Window *window_trace_batch;
private:
  inline void cb_window_trace_batch_i(Fl_Double_Window*, void*);
  static void cb_window_trace_batch(Fl_Double_Window*, void*);
  inline void cb_Add_i(Fl_Button*, void*);
  static void cb_Add(Fl_Button*, void*);
  inline void cb_Upper_i(Fl_Button*, void*);
  static void cb_Upper(Fl_Button*, void*);
  inline void cb_Lower_i(Fl_Button*, void*);
  static void cb_Lower(Fl_Button*, void*);
  inline void cb_Delete1_i(Fl_Button*, void*);
  static void cb_Delete1(Fl_Button*, void*);
  inline void cb_Run_i(Fl_Button*, void*);
  static void cb_Run(Fl_Button*, void*);
public:
  Fl_Browser *selbro_trace_batch_config_list;
  Fl_Double_Window *window_trace_thickness;
private:
  inline void cb_window_trace_thickness_i(Fl_Double_Window*, void*);
  static void cb_window_trace_thickness(Fl_Double_Window*, void*);
public:
  Fl_Check_Button *chkbtn_thickness_01_chk;
private:
  inline void cb_chkbtn_thickness_01_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_thickness_01_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_thickness_01grp;
  Fl_Button *button_thickness_01_tgt_rgb;
private:
  inline void cb_button_thickness_01_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_thickness_01_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Round_Button *roubut_thickness_01_tgt_is_bl;
private:
  inline void cb_roubut_thickness_01_tgt_is_bl_i(Fl_Round_Button*, void*);
  static void cb_roubut_thickness_01_tgt_is_bl(Fl_Round_Button*, void*);
public:
  Fl_Button *button_thickness_01_src;
private:
  inline void cb_button_thickness_01_src_i(Fl_Button*, void*);
  static void cb_button_thickness_01_src(Fl_Button*, void*);
public:
  Fl_Scrollbar *scrbar_thickness_01;
private:
  inline void cb_scrbar_thickness_01_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_thickness_01(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_thickness_01;
private:
  inline void cb_valinp_thickness_01_i(Fl_Value_Input*, void*);
  static void cb_valinp_thickness_01(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *chkbtn_thickness_02_chk;
private:
  inline void cb_chkbtn_thickness_02_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_thickness_02_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_thickness_02grp;
  Fl_Button *button_thickness_02_tgt_rgb;
private:
  inline void cb_button_thickness_02_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_thickness_02_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Round_Button *roubut_thickness_02_tgt_is_bl;
private:
  inline void cb_roubut_thickness_02_tgt_is_bl_i(Fl_Round_Button*, void*);
  static void cb_roubut_thickness_02_tgt_is_bl(Fl_Round_Button*, void*);
public:
  Fl_Button *button_thickness_02_src;
private:
  inline void cb_button_thickness_02_src_i(Fl_Button*, void*);
  static void cb_button_thickness_02_src(Fl_Button*, void*);
public:
  Fl_Scrollbar *scrbar_thickness_02;
private:
  inline void cb_scrbar_thickness_02_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_thickness_02(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_thickness_02;
private:
  inline void cb_valinp_thickness_02_i(Fl_Value_Input*, void*);
  static void cb_valinp_thickness_02(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *chkbtn_thickness_03_chk;
private:
  inline void cb_chkbtn_thickness_03_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_thickness_03_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_thickness_03grp;
  Fl_Button *button_thickness_03_tgt_rgb;
private:
  inline void cb_button_thickness_03_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_thickness_03_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Round_Button *roubut_thickness_03_tgt_is_bl;
private:
  inline void cb_roubut_thickness_03_tgt_is_bl_i(Fl_Round_Button*, void*);
  static void cb_roubut_thickness_03_tgt_is_bl(Fl_Round_Button*, void*);
public:
  Fl_Button *button_thickness_03_src;
private:
  inline void cb_button_thickness_03_src_i(Fl_Button*, void*);
  static void cb_button_thickness_03_src(Fl_Button*, void*);
public:
  Fl_Scrollbar *scrbar_thickness_03;
private:
  inline void cb_scrbar_thickness_03_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_thickness_03(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_thickness_03;
private:
  inline void cb_valinp_thickness_03_i(Fl_Value_Input*, void*);
  static void cb_valinp_thickness_03(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *chkbtn_thickness_04_chk;
private:
  inline void cb_chkbtn_thickness_04_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_thickness_04_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_thickness_04grp;
  Fl_Button *button_thickness_04_tgt_rgb;
private:
  inline void cb_button_thickness_04_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_thickness_04_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Round_Button *roubut_thickness_04_tgt_is_bl;
private:
  inline void cb_roubut_thickness_04_tgt_is_bl_i(Fl_Round_Button*, void*);
  static void cb_roubut_thickness_04_tgt_is_bl(Fl_Round_Button*, void*);
public:
  Fl_Button *button_thickness_04_src;
private:
  inline void cb_button_thickness_04_src_i(Fl_Button*, void*);
  static void cb_button_thickness_04_src(Fl_Button*, void*);
public:
  Fl_Scrollbar *scrbar_thickness_04;
private:
  inline void cb_scrbar_thickness_04_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_thickness_04(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_thickness_04;
private:
  inline void cb_valinp_thickness_04_i(Fl_Value_Input*, void*);
  static void cb_valinp_thickness_04(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *chkbtn_thickness_05_chk;
private:
  inline void cb_chkbtn_thickness_05_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_thickness_05_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_thickness_05grp;
  Fl_Button *button_thickness_05_tgt_rgb;
private:
  inline void cb_button_thickness_05_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_thickness_05_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Round_Button *roubut_thickness_05_tgt_is_bl;
private:
  inline void cb_roubut_thickness_05_tgt_is_bl_i(Fl_Round_Button*, void*);
  static void cb_roubut_thickness_05_tgt_is_bl(Fl_Round_Button*, void*);
public:
  Fl_Button *button_thickness_05_src;
private:
  inline void cb_button_thickness_05_src_i(Fl_Button*, void*);
  static void cb_button_thickness_05_src(Fl_Button*, void*);
public:
  Fl_Scrollbar *scrbar_thickness_05;
private:
  inline void cb_scrbar_thickness_05_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_thickness_05(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_thickness_05;
private:
  inline void cb_valinp_thickness_05_i(Fl_Value_Input*, void*);
  static void cb_valinp_thickness_05(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *chkbtn_thickness_06_chk;
private:
  inline void cb_chkbtn_thickness_06_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_thickness_06_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_thickness_06grp;
  Fl_Button *button_thickness_06_tgt_rgb;
private:
  inline void cb_button_thickness_06_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_thickness_06_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Round_Button *roubut_thickness_06_tgt_is_bl;
private:
  inline void cb_roubut_thickness_06_tgt_is_bl_i(Fl_Round_Button*, void*);
  static void cb_roubut_thickness_06_tgt_is_bl(Fl_Round_Button*, void*);
public:
  Fl_Button *button_thickness_06_src;
private:
  inline void cb_button_thickness_06_src_i(Fl_Button*, void*);
  static void cb_button_thickness_06_src(Fl_Button*, void*);
public:
  Fl_Scrollbar *scrbar_thickness_06;
private:
  inline void cb_scrbar_thickness_06_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_thickness_06(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_thickness_06;
private:
  inline void cb_valinp_thickness_06_i(Fl_Value_Input*, void*);
  static void cb_valinp_thickness_06(Fl_Value_Input*, void*);
public:
  Fl_Double_Window *window_trace_input_color;
private:
  inline void cb_window_trace_input_color_i(Fl_Double_Window*, void*);
  static void cb_window_trace_input_color(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_2[];
public:
  static Fl_Menu_Item *menite_limit_nothing;
private:
  inline void cb_menite_limit_nothing_i(Fl_Menu_*, void*);
  static void cb_menite_limit_nothing(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_limit_hh;
private:
  inline void cb_menite_limit_hh_i(Fl_Menu_*, void*);
  static void cb_menite_limit_hh(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_limit_aa;
private:
  inline void cb_menite_limit_aa_i(Fl_Menu_*, void*);
  static void cb_menite_limit_aa(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_limit_bb;
private:
  inline void cb_menite_limit_bb_i(Fl_Menu_*, void*);
  static void cb_menite_limit_bb(Fl_Menu_*, void*);
public:
  fltk_1000x100_histogram *fltkp_hh_histogram;
  Fl_Box *box_hh_color_belt;
  fltk_hh_cyclic *fltkp_hh_cyclic;
  Fl_Value_Input *valinp_hab_histogram_hh_min;
private:
  inline void cb_valinp_hab_histogram_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_hab_histogram_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_hab_histogram_hh_max;
private:
  inline void cb_valinp_hab_histogram_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_hab_histogram_hh_max(Fl_Value_Input*, void*);
  inline void cb_Max_i(Fl_Button*, void*);
  static void cb_Max(Fl_Button*, void*);
  inline void cb_Average_i(Fl_Button*, void*);
  static void cb_Average(Fl_Button*, void*);
  inline void cb_Color_i(Fl_Light_Button*, void*);
  static void cb_Color(Fl_Light_Button*, void*);
public:
  fltk_1000x100_histogram *fltkp_aa_histogram;
  fltk_1000x10_color_belt *fltkp_aa_color_belt;
  fltk_aa_minmax *fltkp_aa_minmax;
  Fl_Value_Input *valinp_hab_histogram_aa_min;
private:
  inline void cb_valinp_hab_histogram_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_hab_histogram_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_hab_histogram_aa_max;
private:
  inline void cb_valinp_hab_histogram_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_hab_histogram_aa_max(Fl_Value_Input*, void*);
  inline void cb_Max1_i(Fl_Button*, void*);
  static void cb_Max1(Fl_Button*, void*);
  inline void cb_Average1_i(Fl_Button*, void*);
  static void cb_Average1(Fl_Button*, void*);
  inline void cb_Color1_i(Fl_Light_Button*, void*);
  static void cb_Color1(Fl_Light_Button*, void*);
public:
  fltk_1000x100_histogram *fltkp_bb_histogram;
  Fl_Box *box_bb_color_belt;
  fltk_bb_minmax *fltkp_bb_minmax;
  Fl_Value_Input *valinp_hab_histogram_bb_min;
private:
  inline void cb_valinp_hab_histogram_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_hab_histogram_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_hab_histogram_bb_max;
private:
  inline void cb_valinp_hab_histogram_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_hab_histogram_bb_max(Fl_Value_Input*, void*);
  inline void cb_Max2_i(Fl_Button*, void*);
  static void cb_Max2(Fl_Button*, void*);
  inline void cb_Average2_i(Fl_Button*, void*);
  static void cb_Average2(Fl_Button*, void*);
  inline void cb_Color2_i(Fl_Light_Button*, void*);
  static void cb_Color2(Fl_Light_Button*, void*);
public:
  Fl_Double_Window *window_trace_output_color;
private:
  inline void cb_window_trace_output_color_i(Fl_Double_Window*, void*);
  static void cb_window_trace_output_color(Fl_Double_Window*, void*);
public:
  Fl_Scrollbar *scrbar_edit_color_red;
private:
  inline void cb_scrbar_edit_color_red_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_edit_color_red(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_edit_color_red;
private:
  inline void cb_valinp_edit_color_red_i(Fl_Value_Input*, void*);
  static void cb_valinp_edit_color_red(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_edit_color_gre;
private:
  inline void cb_scrbar_edit_color_gre_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_edit_color_gre(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_edit_color_gre;
private:
  inline void cb_valinp_edit_color_gre_i(Fl_Value_Input*, void*);
  static void cb_valinp_edit_color_gre(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_edit_color_blu;
private:
  inline void cb_scrbar_edit_color_blu_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_edit_color_blu(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_edit_color_blu;
private:
  inline void cb_valinp_edit_color_blu_i(Fl_Value_Input*, void*);
  static void cb_valinp_edit_color_blu(Fl_Value_Input*, void*);
};
extern gts_gui cl_gts_gui; 
#endif
